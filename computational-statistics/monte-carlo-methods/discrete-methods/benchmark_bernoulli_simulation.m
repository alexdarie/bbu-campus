function benchmark_bernoulli_simulation(num_simul, p)  ## The idea is to showcase that we can either use the Bern(p) or Bino(1, p) to obtain the same experimental context.  ## Test function with compare_bernoulli_binomial(1e4, 0.6).  fprintf("First, simulate Bernoulli distribution using a Standard Uniform U(0, 1) random number generator.\n")  A = simulate_bernoulli(num_simul, p);  unique_values = unique(A);  freq = hist(A, length(unique_values));  relative_freq = freq/num_simul  fprintf("The relative freq. for success: %1.5f should be close enough to the prob. given: %1.5f.\n\n", relative_freq(2), p)  ## Simulate 'num_simul' bernoulli trials using Bino(1, p) == Bern(p)  fprintf("Then, simulate Bernoulli distribution using Bino(1, p) == Bern(p).\n")  B = binornd(1, p, 1, num_simul);  unique_values = unique(B);  freq = hist(B, length(unique_values));  relative_freq = freq/num_simul  fprintf("The relative freq. for success: %1.5f should be close enough to the prob. given: %1.5f.\n\n", relative_freq(2), p)  fprintf("Note:\nWe should have both methods giving a relative frequency close enough to the input probability.\n")  
endfunction
